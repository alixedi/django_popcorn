{"name":"Django popcorn","tagline":"Add-another pop-ups a la django-admin.","body":"django\\_popcorn\r\n===============\r\n\r\n![http://badge.fury.io/py/django_popcorn](https://badge.fury.io/py/django_popcorn.png)\r\n![https://travis-ci.org/alixedi/django_popcorn](https://travis-ci.org/alixedi/django_popcorn.png?branch=master)\r\n![https://crate.io/packages/django_popcorn?version=latest](https://pypip.in/d/django_popcorn/badge.png)\r\n![https://coveralls.io/r/alixedi/django_popcorn](https://coveralls.io/repos/alixedi/django_popcorn/badge.png)\r\n\r\nAdd-another pop-ups a la `django-admin`.\r\n\r\nThe popup views are implemented using a mixin to the generic CreateView. Also, the popups now support permissions. As a result, a user will only get the `add-another` link next to a ForeignKey or a ManyToMany field if he has the add permission for the target model.\r\n\r\nInstallation\r\n------------\r\n\r\nGet it from the cheeseshop: :\r\n\r\n    pip install django_popcorn\r\n\r\n\r\nUsage\r\n-----\r\n\r\n1. Include the following in your `INSTALLED_APPS` settings: :\r\n\r\n        'popcorn',\r\n\r\n\r\n2. Add this to your `settings.py` (If you do not already have it): :\r\n\r\n        TEMPLATE_CONTEXT_PROCESSORS = (\r\n            \"django.contrib.auth.context_processors.auth\",\r\n            \"django.core.context_processors.debug\",\r\n            \"django.core.context_processors.i18n\",\r\n            \"django.core.context_processors.media\",\r\n            \"django.core.context_processors.static\",\r\n            \"django.contrib.messages.context_processors.messages\",\r\n            \"django.core.context_processors.request\",\r\n            \"popcorn.context_processors.admin_media_prefix\",\r\n        )\r\n\r\n        POPCORN_MODELS = ('auth.Group', 'auth.Permission')\r\n\r\n\r\n3. Add the following to your `base.html` template: :\r\n\r\n        <script src=\"{{ ADMIN_MEDIA_PREFIX }}js/admin/RelatedObjectLookups.js\"></script>\r\n\r\n\r\n4. We will create a view for `auth.User` and use the utility `get_popcorn_urls` function to generate popcorn views and urls: :\r\n\r\n        urlpatterns = patterns('',\r\n            url(r'^$', CreateView.as_view(model=User, success_url='.'), name='auth_user_create'),\r\n            url(r'^admin/', include(admin.site.urls)),\r\n        )\r\n\r\n        urlpatterns += get_popcorn_urls()\r\n\r\n\r\n5. Render your forms like so: :\r\n\r\n        <form method=\"POST\" action=\"{{ request.get_full_path }}\">\r\n            {% csrf_token %}\r\n            {% include 'popcorn/form.html' %}\r\n            <button type=\"submit\">Submit</button>\r\n            <a href=\"../\">Cancel</a>\r\n        </form>\r\n\r\n\r\nThats it! sync your DB, run the dev server and fire up your browser at localhost. You should see a form wthout the ``add-another`` links. This is because popcorn add-another links are only enabled for users who have add permission for the target model. Now log-in - possibly via admin after enabling it and hit localhost again. You should see a little ``+`` next to ForeignKey and ManyToMany fields. Click it and the add-another popup would appear. If you are having any problems, please check out the test project for a working implementation","google":"UA-51375524-3","note":"Don't delete this file! It's used internally to help with page regeneration."}